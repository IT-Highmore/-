var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _GameUI = require("./script/GameUI");

var _GameUI2 = _interopRequireDefault(_GameUI);

var _GameControl = require("./script/GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
            reg("script/GameUI.js", _GameUI2.default);
            reg("script/GameControl.js", _GameControl2.default);
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "test/start.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./script/GameControl":3,"./script/GameUI":4}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// import ui from "./ui/layaMaxUI";
var Main = function () {
	function Main() {
		_classCallCheck(this, Main);

		//根据IDE设置初始化引擎		
		if (window["Laya3D"]) Laya3D.init(_GameConfig2.default.width, _GameConfig2.default.height);else Laya.init(_GameConfig2.default.width, _GameConfig2.default.height, Laya["WebGL"]);
		Laya["Physics"] && Laya["Physics"].enable();
		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
		Laya.stage.scaleMode = _GameConfig2.default.scaleMode;
		Laya.stage.screenMode = _GameConfig2.default.screenMode;
		Laya.stage.alignV = _GameConfig2.default.alignV;
		Laya.stage.alignH = _GameConfig2.default.alignH;
		//兼容微信不支持加载scene后缀场景
		Laya.URL.exportSceneToJson = _GameConfig2.default.exportSceneToJson;

		//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
		if (_GameConfig2.default.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
		if (_GameConfig2.default.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
		if (_GameConfig2.default.stat) Laya.Stat.show();
		Laya.alertGlobalError = true;

		//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
		Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
	}

	_createClass(Main, [{
		key: "onVersionLoaded",
		value: function onVersionLoaded() {
			//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
			Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
		}
	}, {
		key: "onConfigLoaded",
		value: function onConfigLoaded() {
			//加载IDE指定的场景
			_GameConfig2.default.startScene && Laya.Scene.open(_GameConfig2.default.startScene);
		}
	}]);

	return Main;
}();
//激活启动类


new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import DropBox from "./DropBox";
// import Bullet from "./Bullet";
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
var GameControl = function (_Laya$Script) {
    _inherits(GameControl, _Laya$Script);

    // /** @prop {name:dropBox,tips:"掉落容器预制体对象",type:Prefab}*/
    // /** @prop {name:bullet,tips:"子弹预制体对象",type:Prefab}*/
    // /** @prop {name:createBoxInterval,tips:"间隔多少毫秒创建一个下跌的容器",type:int,default:1000}*/

    function GameControl() {
        _classCallCheck(this, GameControl);

        return _possibleConstructorReturn(this, (GameControl.__proto__ || Object.getPrototypeOf(GameControl)).call(this));
    }

    _createClass(GameControl, [{
        key: "onEnable",
        value: function onEnable() {
            //开始时间
            this._time = Date.now();
            //是否已经开始游戏
            this._started = false;
            //子弹和盒子所在的容器对象
            // this._gameBox = this.owner.getChildByName("gameBox");
            // this.createBox();
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            // //每间隔一段时间创建一个盒子
            // let now = Date.now();
            // if (now - this._time > this.createBoxInterval) {
            //     this._time = now;
            //     this.createBox();
            // }
        }
    }, {
        key: "createBox",
        value: function createBox() {
            //使用对象池创建盒子
        }
    }, {
        key: "onStageClick",
        value: function onStageClick(e) {
            //停止事件冒泡，提高性能，当然也可以不要
            e.stopPropagation();
            //舞台被点击后，使用对象池创建子弹
        }

        /**开始游戏，通过激活本脚本方式开始游戏*/

    }, {
        key: "startGame",
        value: function startGame() {
            if (!this._started) {
                this._started = true;
                this.enabled = true;
            }
        }

        /**结束游戏，通过非激活本脚本停止游戏 */

    }, {
        key: "stopGame",
        value: function stopGame() {
            this._started = false;
            this.enabled = false;
            // this.createBoxInterval = 1000;
            // this._gameBox.removeChildren();
        }
    }]);

    return GameControl;
}(Laya.Script);

exports.default = GameControl;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("./GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _LevelUI = require("./LevelUI");

var _LevelUI2 = _interopRequireDefault(_LevelUI);

var _SelectLevel = require("./SelectLevel");

var _SelectLevel2 = _interopRequireDefault(_SelectLevel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = function (_Laya$Scene) {
    _inherits(GameUI, _Laya$Scene);

    function GameUI() {
        _classCallCheck(this, GameUI);

        //设置单例的引用方式，方便其他类引用
        var _this = _possibleConstructorReturn(this, (GameUI.__proto__ || Object.getPrototypeOf(GameUI)).call(this));

        GameUI.instance = _this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        //加载场景文件
        _this.loadScene("test/start.scene");
        return _this;
    }

    _createClass(GameUI, [{
        key: "onEnable",
        value: function onEnable() {
            //戏控制脚本引用，避免每次获取组件带来不必要的性能开销
            this._control = this.getComponent(_GameControl2.default);

            this.currentLevel = 1; //当前等级
            this.currentLevelScore = 0; //当前等级分数
            this.targetScore = 8; //当前等级目标分数
            this.remainSteps = 2; // 剩余的步数
            //点击提示文字，开始游戏
            //初始化游戏，生成随机地图
            this.start.on(Laya.Event.CLICK, this, this.GameStart);
        }
    }, {
        key: "onUpdata",
        value: function onUpdata() {
            if (this.selectArray.length >= 3) {
                console.log(1);
            }
        }
    }, {
        key: "GameStart",
        value: function GameStart() {
            this.InitUI();
            this.loadTarget();
            Laya.SoundManager.playSound("sound/start.mp3", 1, new Laya.Handler(this, null));
        }
    }, {
        key: "InitUI",
        value: function InitUI() {

            Laya.SoundManager.musicMuted = false;

            var bgPath = "comp/bg.jpg";
            this.bg = new Laya.Sprite();
            Laya.stage.addChild(this.bg);
            this.bg.loadImage(bgPath);
            this.bg.pos(0, 0);

            // 新生成块的数组的初始位置 应在图的下方
            // this.newStarGroup = new Laya.Sprite();
            // this.bg.addChild(this.newStarGroup);
            // this.newStarGroup.pos(Laya.stage.width /2,Laya.stage.height /2);


            var headPath = "comp/top.png";
            this.head = new Laya.Sprite();
            this.bg.addChild(this.head);
            this.head.loadImage(headPath);
            this.head.pos(0, 0);

            var bottomPath = "comp/bottom.png";
            this.bottom = new Laya.Sprite();
            this.bg.addChild(this.bottom);
            this.bottom.loadImage(bottomPath);
            this.bottom.pos(0, 920);

            // Laya.loader.load(["comp/progressBar.png", "comp/progressBar$bar.png"],Laya.Handler.create(this, null));
            var progressBarPath = "comp/progressBar.png";
            this.progressBar = new Laya.ProgressBar(progressBarPath);
            this.bottom.addChild(this.progressBar);
            this.progressBar.width = 451;
            this.progressBar.x = 80;
            this.progressBar.y = 10;
            this.progressBar.value = 0;
            this.progressBar.sizeGrid = "0,0,0,0,1";
            this.progressBar.changeHandler = new Laya.Handler(this, this.onChange);

            for (var i = 0; i < 3; i++) {
                var starBlackPath = "comp/star_2.png";
                this.starBlack = new Laya.Sprite();
                this.progressBar.addChild(this.starBlack);
                this.starBlack.loadImage(starBlackPath);
                this.starBlack.pos(242 + i * 90, 0);

                var starLightPath = "comp/star_1.png";
                this.starLight = new Laya.Sprite();
                this.starBlack.addChild(this.starLight);
                this.starLight.loadImage(starLightPath);
                this.starLight.pos(0, 0);
                this.starLight.visible = false;
            }

            this.score = new Laya.Text();
            this.bottom.addChild(this.score);
            this.score.text = '0';
            this.score.color = "#fff";
            this.score.fontSize = 40;
            this.score.pos(350, 65);

            this.currentLevelScore = 0;
            this.colorArray = new Array('5', '1', '2', '3', '4'); //颜色数组
            // this.x = 7; //行数
            // this.y = 5; //列数
            // this.startPositionX = 75;
            // this.startPositionY = 200;
            this.totalArray = new Array(); //方块总数
            this.totalPosition = new Array(); //存放每个方块的位置
            this.selectArray = new Array(); //选中方块数组
            this.deleteArray = new Array(); //删除的方块数组

            this.colNum = {}; //删除元素的每列个数
            this.isHold = false; //是否按下
            this.canTouch = true;
            this.starHeight = 96; //六边形排列宽高
            this.starWidth = 104;
            this.hexSide = 4; //每边四个
            this.bombNumber = 0; //炸弹数量
            this.gameEnded = false;

            this.currentLevelText = new Laya.Text();
            this.bottom.addChild(this.currentLevelText);
            this.currentLevelText.text = this.currentLevel;
            this.currentLevelText.color = "#fff";
            this.currentLevelText.fontSize = 40;
            this.currentLevelText.pos(125, 65);

            this.targetScoreText = new Laya.Text();
            this.head.addChild(this.targetScoreText);
            this.targetScoreText.text = '目标分数: ' + this.targetScore + '  剩余步数: ' + this.remainSteps;
            this.targetScoreText.color = "#008000";
            this.targetScoreText.fontSize = 20;
            this.targetScoreText.pos(3, 75);
            this.targetScoreText.width = 130;
            this.targetScoreText.bold = true;
            this.targetScoreText.align = "left";
            this.targetScoreText.leading = 20;
            this.targetScoreText.wordWrap = true;
        }

        /**
         * 加载资源
         */

    }, {
        key: "loadTarget",
        value: function loadTarget() {
            var _this2 = this;

            this.starGroup = new Laya.Sprite();
            this.starGroup.pos(Laya.stage.width / 2, Laya.stage.height / 2);
            this.bg.addChild(this.starGroup);
            Laya.SoundManager.playMusic("sound/bgmusic.mp3", 0, new Laya.Handler(this, null));
            Laya.SoundManager.MusicVolume = 0.5;
            //六边形坐标排列

            this.hexSide--;

            var _loop = function _loop(i) {
                var _loop2 = function _loop2(j) {
                    if (i * j > 0 && Math.abs(i + j) > _this2.hexSide) return "continue";
                    if (i * j < 0 && (Math.abs(i) > _this2.hexSide || Math.abs(j) > _this2.hexSide)) return "continue";
                    var index = parseInt(Math.random() * _this2.colorArray.length - 1);
                    var starPath = "comp/lbx_" + index + ".png";
                    var bombPath = "comp/bomb_" + index + ".png";
                    Laya.loader.load([starPath, bombPath], Laya.Handler.create(_this2, function () {
                        var star = new Laya.Sprite();
                        this.starGroup.addChild(star);
                        if (Math.random() > 0.95 && this.bombNumber < 5) {
                            star.loadImage(bombPath);
                            star.name = "bomb";
                            this.bombNumber++;
                        } else {
                            star.loadImage(starPath);
                            star.name = "lbx";
                        }
                        star.indexColor = index;
                        star.row = i;
                        star.col = j;
                        star.select = false;
                        star.count = 0;
                        star.pivot(star.width / 2, star.height / 2);
                        var position = this.hex2pixel({ i: i, j: j }, this.starWidth);
                        star.pos(position.x, position.y);
                        star.scaleX = 1;
                        star.scaleY = 1;
                        var pos = {
                            x: star.x,
                            y: star.y,
                            isExist: true
                        };
                        this.totalPosition.push(pos);
                        this.totalArray.push(star);
                        star.on(Laya.Event.MOUSE_DOWN, this, this.startClick, [star]);
                        star.on(Laya.Event.MOUSE_OVER, this, this.onOver, [star]);
                        star.on(Laya.Event.MOUSE_OUT, this, this.onOut, [star]);
                    }));
                };

                for (var j = -_this2.hexSide; j <= _this2.hexSide; j++) {
                    var _ret2 = _loop2(j);

                    if (_ret2 === "continue") continue;
                }
            };

            for (var i = -this.hexSide; i <= this.hexSide; i++) {
                _loop(i);
            }
            // Laya.timer.once(1, this, this.loadProps, []);
        }

        // 加载道具

    }, {
        key: "loadProps",
        value: function loadProps() {
            var _this3 = this;

            var indexbomb = 1;

            var _loop3 = function _loop3(j) {
                var index = parseInt(Math.random() * _this3.starGroup._children.length - 1);
                var bombPath = "comp/bomb_" + _this3.starGroup._children[index].indexColor + ".png";
                Laya.loader.load(bombPath, Laya.Handler.create(_this3, function () {
                    // console.log(this.starGroup._children[index])
                    this.starGroup._children[index].loadImage(bombPath);
                    this.starGroup._children[index].name = "bomb";
                }));
            };

            for (var j = 0; j < indexbomb; j++) {
                _loop3(j);
            }
        }

        /**
         * 开始点击
         * @param {*} sprite 
         */

    }, {
        key: "startClick",
        value: function startClick(sprite) {
            if (this.gameEnded) {
                return;
            }
            if (!this.canTouch) {
                return;
            }
            this.selectHasBomb = [];
            if (sprite.name != 'lbx') {
                this.selectHasBomb.push(sprite);
            }

            Laya.Tween.to(sprite, {
                "scaleX": 1.1,
                "scaleY": 1.1
            }, 100);
            this.isHold = true;
            this.selectArray.push(sprite); //消灭方块数组
            sprite.select = true;
            Laya.SoundManager.playSound("sound/select.mp3", 1, new Laya.Handler(this, null));

            this.lineGroup = new Laya.Sprite();
            this.bg.addChild(this.lineGroup);
            this.lineGroup.pos(Laya.stage.width / 2, Laya.stage.height / 2);

            this.boomGroup = new Laya.Sprite();
            this.bg.addChild(this.boomGroup);
            this.boomGroup.pos(Laya.stage.width / 2, Laya.stage.height / 2);

            this.explosionGroup = new Laya.Sprite();
            this.bg.addChild(this.explosionGroup);
            this.explosionGroup.pos(Laya.stage.width / 2, Laya.stage.height / 2);

            // console.log(sprite.row,sprite.col)
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onStartMouseUp, [sprite]);
        }

        /**
         * 六边形坐标转换成像素值
         * @param {*坐标} hex 
         * @param {*高度} h 
         */

    }, {
        key: "hex2pixel",
        value: function hex2pixel(hex, h) {
            var size = h / 2;
            var y = parseInt(size * Math.sqrt(3) * (hex.i + hex.j / 2));
            var x = size * 3 / 2 * hex.j;
            var pos = {
                x: x,
                y: y
            };
            return pos;
        }
    }, {
        key: "onOver",
        value: function onOver(sprite) {
            if (!this.isHold) {
                return;
            }
            if (this.gameEnded) {
                return;
            }

            if (this.selectArray[this.selectArray.length - 1].indexColor == sprite.indexColor) {
                if (Math.abs(this.selectArray[this.selectArray.length - 1].row - sprite.row) == 1 && this.selectArray[this.selectArray.length - 1].col == sprite.col || this.selectArray[this.selectArray.length - 1].col - sprite.col == 1 && (this.selectArray[this.selectArray.length - 1].row - sprite.row == 0 || this.selectArray[this.selectArray.length - 1].row - sprite.row == -1) || this.selectArray[this.selectArray.length - 1].col - sprite.col == -1 && (this.selectArray[this.selectArray.length - 1].row - sprite.row == 0 || this.selectArray[this.selectArray.length - 1].row - sprite.row == 1)) {
                    Laya.Tween.to(sprite, {
                        "scaleX": 1.1,
                        "scaleY": 1.1
                    }, 100, Laya.Ease.bounceOut);
                    Laya.SoundManager.playSound("sound/select.mp3", 1, new Laya.Handler(this, null));
                    if (!sprite.select) {
                        this.drawLine(this.selectArray[this.selectArray.length - 1], sprite);
                        this.selectArray.push(sprite); //消灭方块数组
                        sprite.select = true;
                        if (sprite.name != 'lbx') {
                            this.selectHasBomb.push(sprite);
                        }
                    }
                }
            }

            if (sprite == this.selectArray[this.selectArray.length - 2]) {
                this.lineGroup._children[this.lineGroup._children.length - 1].destroy();
                this.selectArray[this.selectArray.length - 1].select = false;
                this.selectArray.pop();
                if (sprite.name != 'lbx') {
                    this.selectHasBomb.pop(sprite);
                }
            }

            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.overMouseUp, [sprite]);
        }
    }, {
        key: "overMouseUp",
        value: function overMouseUp(sprite) {
            Laya.Tween.to(sprite, {
                "scaleX": 1,
                "scaleY": 1
            }, 100, Laya.Ease.bounceOut);
        }
    }, {
        key: "onOut",
        value: function onOut(sprite) {
            if (!this.isHold) {
                return;
            }
            Laya.Tween.to(sprite, {
                "scaleX": 1,
                "scaleY": 1
            }, 100, Laya.Ease.bounceOut);
        }

        /** 鼠标放开时，如果正在hold，则播放放开的效果
         * 
         * @param {*} sprite 
         */

    }, {
        key: "onStartMouseUp",
        value: function onStartMouseUp(sprite) {
            var _this4 = this;

            // let DIV = document.getElementById("layaCanvas");
            // DIV.onmouseout = function () {
            //     console.log(1);
            // }
            if (this.isHold) {
                this.lineGroup.destroy();
                this.isHold = false;
                Laya.Tween.to(sprite, {
                    "scaleX": 1,
                    "scaleY": 1
                }, 100, Laya.Ease.bounceOut);

                if (this.selectArray.length >= 3) {
                    if (this.selectHasBomb.length != 0) {
                        this.selectArray.forEach(function (item) {
                            Laya.SoundManager.playSound("sound/boom.mp3", 1, new Laya.Handler(_this4, null));
                            _this4.DestoryAnimation(item);
                            _this4.BoomAnimation(item);
                            _this4.deleteArray.push(item);
                            var index = _this4.totalArray.indexOf(item);
                            if (index > -1) {
                                _this4.totalArray.splice(index, 1);
                            }
                        });
                        for (var i = 0; i < this.selectHasBomb.length; i++) {
                            // Laya.SoundManager.playSound("sound/boom.mp3", 1, new Laya.Handler(this, null));
                            this.bombProps(this.selectHasBomb[i]);
                            this.bombExplosion(this.selectHasBomb[i]);
                        }
                        this.updateArray();
                    } else {
                        this.selectArray.forEach(function (item) {
                            _this4.deleteArray.push(item);
                            _this4.DestoryAnimation(item);
                            _this4.BoomAnimation(item);
                            var index = _this4.totalArray.indexOf(item);
                            if (index > -1) {
                                _this4.totalArray.splice(index, 1);
                            }
                        });
                    }
                    Laya.SoundManager.playSound("sound/clear.mp3", 1, new Laya.Handler(this, null));
                    this.selectArray = [];
                    // console.log(this.deleteArray.length)
                    this.canTouch = false;
                    Laya.timer.once(150, this, this.verticalFall, []);
                } else {
                    this.selectArray.forEach(function (item) {
                        item.select = false;
                    });
                    this.selectHasBomb = [];
                    this.selectArray = [];
                }
            }
        }

        /**
         * 炸弹道具逻辑
         */

    }, {
        key: "bombProps",
        value: function bombProps(sprite) {
            // console.log('total' + this.totalArray.length)
            // console.log(this.deleteArray.length)
            this.updateArray();
            for (var j = 0; j < this.totalArray.length; j++) {
                if (this.totalArray[j].col == sprite.col && Math.abs(this.totalArray[j].row - sprite.row) == 1 || sprite.col - this.totalArray[j].col == 1 && (sprite.row - this.totalArray[j].row == 0 || sprite.row - this.totalArray[j].row == -1) || sprite.col - this.totalArray[j].col == -1 && (sprite.row - this.totalArray[j].row == 0 || sprite.row - this.totalArray[j].row == 1)) {
                    this.DestoryAnimation(this.totalArray[j]);
                    // this.bombExplosion(this.totalArray[j]);
                    this.BoomAnimation(this.totalArray[j]);
                    if (!this.totalArray[j].select) {
                        this.deleteArray.push(this.totalArray[j]);
                        this.totalArray[j].select = true;
                    }
                    if (this.totalArray[j].name == 'bomb') {
                        // console.log(this.totalArray.length)
                        this.bombExplosion(this.totalArray[j]);
                        this.bombProps(this.totalArray[j]);
                    }
                }
            }
        }
    }, {
        key: "updateArray",
        value: function updateArray() {
            // console.log('delete' + this.deleteArray.length)
            for (var k = 0; k < this.deleteArray.length; k++) {
                var _index = this.totalArray.indexOf(this.deleteArray[k]);
                if (_index > -1) {
                    this.totalArray.splice(_index, 1);
                }
            }
            // console.log('total new' + this.totalArray.length)
            // for (let m = 0; m < this.deleteArray.length; m++) {
            //     if (this.deleteArray[m].name == 'bomb') {
            //         this.bombProps(this.deleteArray[m]);
            //     }
            // }
        }

        /**
         * 消失动画
         */

    }, {
        key: "DestoryAnimation",
        value: function DestoryAnimation(item) {
            var timeLine = new Laya.TimeLine();
            timeLine.addLabel("disappear", 0).to(item, { scaleX: 0.1, scaleY: 0.1, alpha: 0 }, 300, null, 0);
            timeLine.play(0, false);
            timeLine.on(Laya.Event.COMPLETE, this, function () {
                item.destroy();
            });
        }

        /**
         * 炸弹爆炸动画
         */

    }, {
        key: "bombExplosion",
        value: function bombExplosion(item) {
            var aniConfPath = "res/atlas/explosion/explosion.atlas";
            Laya.loader.load(aniConfPath, Laya.Handler.create(this, null), null, Laya.Loader.ATLAS);
            var explosionAni = new Laya.Animation();
            this.explosionGroup.addChild(explosionAni);
            explosionAni.loadAtlas(aniConfPath);
            explosionAni.interval = 30;
            explosionAni.play(0, false);
            explosionAni.pivot(92 / 2, 86 / 2);
            explosionAni.pos(item.x, item.y);
            explosionAni.on(Laya.Event.COMPLETE, this, function () {
                this.explosionGroup.destroy();
            });
        }
        /**
         * 星星爆炸动画
         */

    }, {
        key: "BoomAnimation",
        value: function BoomAnimation(item) {
            var aniConfPath = "res/atlas/boom/boom.atlas";
            Laya.loader.load(aniConfPath, Laya.Handler.create(this, null), null, Laya.Loader.ATLAS);
            var boomAni = new Laya.Animation();
            this.boomGroup.addChild(boomAni);
            boomAni.loadAtlas(aniConfPath);
            boomAni.interval = 30;
            boomAni.play(0, false);
            boomAni.pivot(92 / 2, 86 / 2);
            boomAni.pos(item.x, item.y);
            boomAni.on(Laya.Event.COMPLETE, this, function () {
                this.boomGroup.destroy();
            });
        }

        /**
         * 进度条
         */

    }, {
        key: "changeProcessBar",
        value: function changeProcessBar(length) {
            if (this.progressBar.value < 1) {
                var add = length / this.targetScore;
                this.progressBar.value += add;
                for (var i = 2; i < this.progressBar._children.length; i++) {
                    if (this.progressBar.value >= (this.progressBar._children[i].x + 18) / this.progressBar.width) {
                        this.progressBar._children[i]._children[0].visible = true;
                    }
                }
            }
        }

        /**
         * 进度条实时检测
         */

    }, {
        key: "onChange",
        value: function onChange(value) {
            if (this.remainSteps = 0 && value < 1) {
                Laya.SoundManager.musicMuted = true;
                Laya.timer.once(500, this, this.defeat);
            }
            if (value >= 1) {
                Laya.SoundManager.musicMuted = true;
                Laya.timer.once(500, this, this.success, []);
            }
        }

        /**
         * 划线
         * @param {*} start 
         * @param {*} end 
         */

    }, {
        key: "drawLine",
        value: function drawLine(start, end) {

            if (start.col == end.col) {
                // console.log("竖直")
                var linePath = "comp/line_" + 4 + ".png";
                var line = new Laya.Sprite();
                this.lineGroup.addChild(line);
                line.loadImage(linePath);
                line.pivot(line.width / 2, line.height / 2);
                line.pos((start.x + end.x) / 2, (start.y + end.y) / 2);
            } else if (start.col + start.row == end.col + end.row) {
                // console.log("左斜")
                var _linePath = "comp/line_" + 4 + ".png";
                var _line = new Laya.Sprite();
                this.lineGroup.addChild(_line);
                _line.loadImage(_linePath);
                _line.pivot(_line.width / 2, _line.height / 2);
                _line.pos((start.x + end.x) / 2, (start.y + end.y) / 2);
                _line.rotation = 60;
            } else {
                // console.log("右斜")
                var _linePath2 = "comp/line_" + 4 + ".png";
                var _line2 = new Laya.Sprite();
                this.lineGroup.addChild(_line2);
                _line2.loadImage(_linePath2);
                _line2.pivot(_line2.width / 2, _line2.height / 2);
                _line2.pos((start.x + end.x) / 2, (start.y + end.y) / 2);
                _line2.rotation = 120;
            }
        }

        /**
         * 垂直下落填充方法
         * 消除后要补充被消除掉的元素，补充动画元素前
         * 按列把被消元素的上方元素下降，无可降后再随机进行填充
         * 填满被消除的个数
         */

    }, {
        key: "verticalFall",
        value: function verticalFall() {
            var _this5 = this;

            // console.log(this.deleteArray.length)
            this.currentLevelScore += this.deleteArray.length;
            this.score.changeText(this.currentLevelScore);
            this.changeProcessBar(this.deleteArray.length);

            for (var i = 0; i < this.deleteArray.length; i++) {
                var col = this.deleteArray[i].col;
                // let row = this.deleteArray[i].row;
                if (!this.colNum[col]) {
                    this.colNum[col] = 1;
                } else {
                    this.colNum[col]++;
                }
            }
            // console.log(this.colNum)
            // 要获取某一列方块 下方 消除方块的个数
            this.totalArray.forEach(function (tolItem) {
                _this5.deleteArray.forEach(function (item) {
                    if (item.col == tolItem.col && item.row > tolItem.row) {
                        tolItem.count++;
                    }
                });
            });

            for (var _i = 0; _i < this.totalArray.length; _i++) {
                for (var j = 0; j < this.deleteArray.length; j++) {
                    if (this.deleteArray[j].col == this.totalArray[_i].col && this.deleteArray[j].row > this.totalArray[_i].row) {
                        var timeLine = new Laya.TimeLine();
                        timeLine.addLabel("turnDown", 0).to(this.totalArray[_i], { y: this.totalArray[_i].y + 90 * this.totalArray[_i].count }, 100 + 100 * this.totalArray[_i].count, Laya.Ease.sineOut).addLabel("turnUp", 0).to(this.totalArray[_i], { y: this.totalArray[_i].y + 90 * this.totalArray[_i].count - 10 - 5 * this.setBounceDistance(this.totalArray[_i].count) }, 100, Laya.Ease.sineOut).addLabel("turnDown", 0).to(this.totalArray[_i], { y: this.totalArray[_i].y + 90 * this.totalArray[_i].count }, 100, Laya.Ease.sineOut);
                        timeLine.play(0, false);
                        this.totalArray[_i].row += this.totalArray[_i].count;
                        break;
                    }
                }
            }

            Laya.timer.once(200, this, this.creatNewStar, []);
        }

        /**
         * 生成新的元素
         */

    }, {
        key: "creatNewStar",
        value: function creatNewStar() {
            this.totalArray.forEach(function (tolItem) {
                tolItem.count = 0;
            });

            var newStarGroup = new Laya.Sprite();
            this.bg.addChild(newStarGroup);
            newStarGroup.pos(Laya.stage.width / 2, Laya.stage.height / 2);

            for (var p = -this.hexSide; p <= this.hexSide; p++) {
                if (this.colNum[p] != null) {
                    for (var q = 0; q < this.colNum[p]; q++) {
                        var _index2 = parseInt(Math.random() * this.colorArray.length - 1);
                        var _starPath = "comp/lbx_" + _index2 + ".png";
                        var _bombPath = "comp/bomb_" + _index2 + ".png";
                        var star = new Laya.Sprite();
                        // if (Math.random() > 0.8) {
                        //     star.loadImage(bombPath);
                        //     star.name = "bomb";
                        // } else {
                        star.loadImage(_starPath);
                        star.name = "lbx";
                        // }
                        newStarGroup.addChild(star);
                        star.pivot(star.width / 2, star.height / 2);
                        if (p >= 0) {
                            star.pos(this.hex2pixel({ i: -4 - q - 1, j: p }, this.starWidth).x, this.hex2pixel({ i: -4 - q - 1, j: p }, this.starWidth).y);
                            star.row = -4 - q + this.colNum[p];
                        } else {
                            star.pos(this.hex2pixel({ i: -3 - p - q - 1 - 1, j: p }, this.starWidth).x, this.hex2pixel({ i: -3 - p - q - 1 - 1, j: p }, this.starWidth).y);
                            star.row = -3 - p - q - 1 + this.colNum[p];
                        }
                        star.indexColor = _index2;
                        star.col = p;
                        star.count = 0;
                        star.select = false;
                        this.totalArray.push(star);
                        star.on(Laya.Event.MOUSE_DOWN, this, this.startClick, [star]);
                        star.on(Laya.Event.MOUSE_OVER, this, this.onOver, [star]);
                        star.on(Laya.Event.MOUSE_OUT, this, this.onOut, [star]);
                    }
                }
            }
            if (Math.random() > 0.85) {
                var _index3 = parseInt(Math.random() * newStarGroup._children.length - 1);
                var _bombPath2 = "comp/bomb_" + newStarGroup._children[_index3].indexColor + ".png";
                Laya.loader.load(_bombPath2, Laya.Handler.create(this, function () {
                    // console.log(newStarGroup._children[index])
                    newStarGroup._children[_index3].loadImage(_bombPath2);
                    newStarGroup._children[_index3].name = "bomb";
                }));
            }

            //下落
            for (var k = 0; k < this.deleteArray.length; k++) {
                var timeLine = new Laya.TimeLine();
                timeLine.addLabel("turnDown", 0).to(newStarGroup._children[k], {
                    y: newStarGroup._children[k].y + 90 * (this.colNum[newStarGroup._children[k].col] + 1)
                }, 300, Laya.Ease.sineOut).addLabel("turnUp", 0).to(newStarGroup._children[k], { y: newStarGroup._children[k].y + 90 * (this.colNum[newStarGroup._children[k].col] + 1) - 10 - 5 * this.setBounceDistance(this.colNum[newStarGroup._children[k].col]) }, 100, Laya.Ease.sineOut).addLabel("turnDown", 0).to(newStarGroup._children[k], { y: newStarGroup._children[k].y + 90 * (this.colNum[newStarGroup._children[k].col] + 1) }, 100, Laya.Ease.sineOut);
                timeLine.play(0, false);
            }
            this.selectHasBomb = [];
            this.deleteArray = [];
            this.colNum = {};
            this.canTouch = true;
            this.remainSteps--;
            this.targetScoreText.changeText('剩余步数: ' + this.remainSteps);
        }

        /**
         * 下落反弹设定
         */

    }, {
        key: "setBounceDistance",
        value: function setBounceDistance(count) {
            if (count <= 4) {
                return count - 1;
            } else {
                return 3;
            }
        }

        /**
         * 失败
         */

    }, {
        key: "defeat",
        value: function defeat() {
            console.log("defeat");
            this.gameEnded = true;
            Laya.SoundManager.playSound("sound/defeat.mp3", 1, new Laya.Handler(this, function () {}));
        }
    }, {
        key: "success",


        /**
         * 成功
         */
        value: function success() {
            console.log("success");
            this.gameEnded = true;
            Laya.SoundManager.playSound("sound/success.mp3", 1, new Laya.Handler(this, function () {
                var bgGreyPath = "comp/bg_grey.png";
                var bgGrey = new Laya.Sprite();
                this.bg.addChild(bgGrey);
                bgGrey.loadImage(bgGreyPath);
                bgGrey.pos(0, 0);
                var winPath = "comp/win.png";
                Laya.loader.load(winPath, Laya.Handler.create(this, function () {
                    var win = new Laya.Sprite();
                    bgGrey.addChild(win);
                    win.loadImage(winPath);
                    win.pivot(win.width / 2, win.height / 2);
                    win.pos(Laya.stage.width / 2, Laya.stage.height / 2);

                    var winStar1 = new Laya.Sprite();
                    win.addChild(winStar1);
                    winStar1.loadImage("comp/star_1_1.png");
                    winStar1.pos(80, 80);

                    var winStar2 = new Laya.Sprite();
                    win.addChild(winStar2);
                    winStar2.loadImage("comp/star_2_1.png");
                    winStar2.pos(230, 35);

                    var winStar3 = new Laya.Sprite();
                    win.addChild(winStar3);
                    winStar3.loadImage("comp/star_3_1.png");
                    winStar3.pos(400, 85);

                    var pauseIcon = new Laya.Sprite();
                    win.addChild(pauseIcon);
                    pauseIcon.loadImage("comp/icon_2.png");
                    pauseIcon.pos(510, -15);
                    pauseIcon.on(Laya.Event.CLICK, this, this.LevelSelect);

                    var endIcon = new Laya.Sprite();
                    win.addChild(endIcon);
                    endIcon.loadImage("comp/icon_1.png");
                    endIcon.pos(210, 525);
                    endIcon.on(Laya.Event.CLICK, this, this.LevelReset);

                    var currentScore = new Laya.Text();
                    win.addChild(currentScore);
                    currentScore.text = this.currentLevelScore;
                    currentScore.color = "#fff";
                    currentScore.fontSize = 40;
                    currentScore.pos(300, 420);
                }));
            }));
        }
    }, {
        key: "LevelSelect",
        value: function LevelSelect() {

            var levelSelect = new _SelectLevel2.default();
            levelSelect.select();
        }
    }, {
        key: "LevelReset",
        value: function LevelReset() {
            var levelReset = new _LevelUI2.default();
            levelReset.startGame();
            // console.log(this.starGroup)
        }

        /**
            * 流程
         * 初始化游戏
         * 时间，等级，分数，目标分数
         * 地图，随机颜色
         * 触发点击事件，检测相同消除
         * 检测颜色区域，扩展加入新的元素，掉落填补空缺，检查死局
         * 获取分数是否大于目标分数
         */

    }]);

    return GameUI;
}(Laya.Scene);

exports.default = GameUI;

},{"./GameControl":3,"./LevelUI":5,"./SelectLevel":6}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameUI = require("./GameUI");

var _GameUI2 = _interopRequireDefault(_GameUI);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
* 关卡界面选择
*/
var LevelUI = function (_Laya$Script) {
    _inherits(LevelUI, _Laya$Script);

    function LevelUI() {
        _classCallCheck(this, LevelUI);

        //设置单例的引用方式，方便其他类引用
        var _this = _possibleConstructorReturn(this, (LevelUI.__proto__ || Object.getPrototypeOf(LevelUI)).call(this));

        LevelUI.instance = _this;
        return _this;
    }

    _createClass(LevelUI, [{
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onUpdate",
        value: function onUpdate() {}
    }, {
        key: "startGame",
        value: function startGame() {
            console.log(_GameUI2.default.instance.currentLevel);
            _GameUI2.default.instance.currentLevel++;
            _GameUI2.default.instance.targetScore += 50;
            _GameUI2.default.instance.GameStart();
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            // //子弹被移除时，回收子弹到对象池，方便下次复用，减少对象创建开销
            // Laya.Pool.recover("bullet", this.owner);
        }
    }]);

    return LevelUI;
}(Laya.Script);

exports.default = LevelUI;

},{"./GameUI":4}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameUI = require("./GameUI");

var _GameUI2 = _interopRequireDefault(_GameUI);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
* 关卡界面选择
*/
var SelectLevel = function (_Laya$Scene) {
    _inherits(SelectLevel, _Laya$Scene);

    function SelectLevel() {
        _classCallCheck(this, SelectLevel);

        //设置单例的引用方式，方便其他类引用
        var _this = _possibleConstructorReturn(this, (SelectLevel.__proto__ || Object.getPrototypeOf(SelectLevel)).call(this));

        SelectLevel.instance = _this;
        _this.mLastMouseX = 0;
        _this.mLastMouseY = 0;
        _this.mX = 0;
        _this.mY = 0;
        return _this;
    }

    _createClass(SelectLevel, [{
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            console.log(1);
        }
    }, {
        key: "select",
        value: function select() {
            console.log(_GameUI2.default.instance.currentLevel);
            Laya.Scene.open("test/level.scene");
            console.log(22);
            // this.levelScene = new Laya.Sprite();
            // Laya.stage.addChild(this.levelScene);
            //this.levelScene.createMap("comp/level.jpg", new Laya.Rectangle(0, 0, Laya.Browser.width, Laya.Browser.height), new Laya.Handler(this, null));
            // this.levelScene.loadImage("comp/level.jpg");
            // this.levelScene.pos(0,-100);
            // Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onStartDrag);
            // Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onStopDrag);
            // this.initLevel();
        }
    }, {
        key: "initLevel",
        value: function initLevel() {
            var level1 = new Laya.Sprite();
            this.levelScene.addChild(level1);
            level1.loadImage("comp/unlock.png");
            level1.pos(100, 1050);

            var pass1 = new Laya.Sprite();
            level1.addChild(pass1);
            pass1.loadImage("comp/pass1.png");
            pass1.pos(30, 10);

            var level2 = new Laya.Sprite();
            this.levelScene.addChild(level2);
            level2.loadImage("comp/unlock.png");
            level2.pos(140, 640);
            var curr = new Laya.Sprite();
            this.levelScene.addChild(curr);
            curr.loadImage("comp/curr.png");
            curr.pos(140, 640);

            var pass2 = new Laya.Sprite();
            level2.addChild(pass2);
            pass2.loadImage("comp/pass2.png");
            pass2.pos(20, 10);
            var curr2 = new Laya.Sprite();
            curr.addChild(curr2);
            curr2.loadImage("comp/curr2.png");
            curr2.pos(30, 10);
        }
    }, {
        key: "onStartDrag",
        value: function onStartDrag(e) {
            this.drag = true;
            this.mLastMouseX = Laya.stage.mouseX;
            this.mLastMouseY = Laya.stage.mouseY;
            // console.log('drag',this.mLastMouseX,this.mLastMouseY)
            Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove);
        }
    }, {
        key: "onStopDrag",
        value: function onStopDrag() {
            this.drag = false;
            this.mX -= Laya.stage.mouseX - this.mLastMouseX;
            this.mY -= Laya.stage.mouseY - this.mLastMouseY;
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.mouseMove);
        }
    }, {
        key: "mouseMove",
        value: function mouseMove() {
            var moveX = this.mX - (Laya.stage.mouseX - this.mLastMouseX),
                moveY = this.mY - (Laya.stage.mouseY - this.mLastMouseY);
            // 移动地图视口
            if (moveX > 0) {
                moveX = 0;
            } else if (moveX < -(2048 - Laya.stage.width)) {
                moveX = -(2048 - Laya.stage.width);
            }

            if (moveY > 0) {
                moveY = 0;
            } else if (moveY < -(2048 - Laya.stage.height)) {
                moveY = -(2048 - Laya.stage.height);
            }
            console.log(moveX, moveY);
            // this.levelScene.moveViewPort(moveX, moveY);
            this.levelScene.pos(moveX, moveY);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            // //子弹被移除时，回收子弹到对象池，方便下次复用，减少对象创建开销
            // Laya.Pool.recover("bullet", this.owner);
        }
    }]);

    return SelectLevel;
}(Laya.Scene);

exports.default = SelectLevel;

},{"./GameUI":4}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
